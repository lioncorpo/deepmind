# Platform-specific code for reverb

load("//launchpad:build_defs.bzl", "lp_cc_library")

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

lp_cc_library(
    name = "status_macros",
    hdrs = ["status_macros.h"],
    deps = ["//courier/platform/default:status_macros"],
)

lp_cc_library(
    name = "grpc_utils_hdr",
    hdrs = ["grpc_utils.h"],
    deps = [
        "@com_github_grpc_grpc//:grpc++",
        "@com_google_absl//absl/strings",
    ],
)

lp_cc_library(
    name = "grpc_utils",
    hdrs = ["grpc_utils.h"],
    deps = [
        "//courier/platform/default:grpc_utils",
        "@com_github_grpc_grpc//:grpc++",
        "@com_google_absl//absl/strings",
    ],
)

lp_cc_library(
    name = "client_monitor_hdr",
    hdrs = ["client_monitor.h"],
    deps = [
        "@com_github_grpc_grpc//:grpc++",
    ],
)

lp_cc_library(
    name = "client_monitor",
    hdrs = ["client_monitor.h"],
    deps = [
        "//courier/platform/default:client_monitor",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

lp_cc_library(
    name = "logging",
    hdrs = ["logging.h"],
    deps = ["//courier/platform/default:logging"],
)

lp_cc_library(
    name = "tensor_conversion_hdr",
    hdrs = ["tensor_conversion.h"],
    deps = [
        "//courier/serialization:serialization_cc_proto",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status:statusor",
    ],
)

lp_cc_library(
    name = "tensor_conversion",
    hdrs = ["tensor_conversion.h"],
    deps = [
        "//courier/platform/default:tensor_conversion",
        "//courier/serialization:serialization_cc_proto",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status:statusor",
    ],
)
